# Challenge 14

# /*
#  * Reto #14
#  * ¬øES UN N√öMERO DE ARMSTRONG?
#  * Fecha publicaci√≥n enunciado: 04/04/22
#  * Fecha publicaci√≥n resoluci√≥n: 11/04/22
#  * Dificultad: F√ÅCIL
#  *
#  * Enunciado: Escribe una funci√≥n que calcule si un n√∫mero dado es un n√∫mero de Amstrong (o tambi√©n llamado narcisista).
#  * Si no conoces qu√© es un n√∫mero de Armstrong, debes buscar informaci√≥n al respecto.
#  *

### N√∫mero de Armstrong:
# Un n√∫mero de Armstrong (AKA Plus Perfect number, o n√∫mero narcisista) es un n√∫mero que es igual a la suma de la nen√©sima potencia de los d√≠gitos, donde nes el n√∫mero de d√≠gitos del n√∫mero.

# Por ejemplo, 153 tiene 3 d√≠gitos y 153 = 1^3 + 5^3 + 3^3, por 153 lo tanto, es un n√∫mero de Armstrong.

# Por ejemplo, 8208 tiene 4 d√≠gitos y 8208 = 8^4 + 2^4 + 0^4 + 8^4, por 8208 lo tanto, es un n√∫mero de Armstrong.
###

#  * Informaci√≥n adicional:
#  * - Usa el canal de nuestro discord (https://mouredev.com/discord) "üîÅreto-semanal" para preguntas, dudas o prestar ayuda a la comunidad.
#  * - Puedes hacer un Fork del repo y una Pull Request al repo original para que veamos tu soluci√≥n aportada.
#  * - Revisar√© el ejercicio en directo desde Twitch el lunes siguiente al de su publicaci√≥n.
#  * - Subir√© una posible soluci√≥n al ejercicio el lunes siguiente al de su publicaci√≥n.
#  *
#  */
#%% N√∫meros de Armstrong
    # Ej: 153 = 1^3 + 5^3 + 3^3 True
def main():
    print(370, es_num_de_Armstrong(370))
    print(371, es_num_de_Armstrong(371))
    print(-371, es_num_de_Armstrong(-371))
    print(372, es_num_de_Armstrong(372))
    print(0, es_num_de_Armstrong(0))
def es_num_de_Armstrong(num):
    if num < 0:
        return False
    else:
        num_str = str(num)
        n = len(num_str)
        digitos = [int(digit) for digit in num_str]
        suma = 0
        for digito in digitos:
            suma += digito**n
        return suma == num
main()